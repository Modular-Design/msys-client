name: Tag Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build Release Assets
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-latest] # ubuntu-latest, macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: 'adopt'

      - name: Grant excute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build with Gradle
        run: ./gradlew jlinkZip

      - name: Upload Linux Artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@master
        with:
          name: linux
          path: pbuild/distributions

      - name: Upload Windows Artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@master
        with:
          name: windows
          path: build/distributions


  publish:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Download Linux Artifact
        uses: actions/download-artifact@master
        with:
          name: linux
          path: .

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./msys-linux.zip
          asset_name: msys-linux.zip
          asset_content_type: application/zip

      - name: Download Windows Artifact
        uses: actions/download-artifact@master
        with:
          name: windows
          path: .

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./msys-win.zip
          asset_name: msys-win.zip
          asset_content_type: application/zip