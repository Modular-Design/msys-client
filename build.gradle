import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.beryx.jlink' version '2.24.0'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}


// Application Configuration
ext {
    appName = "MSYS Client"
    appLauncher = "msys.client"
    appPackaging = "msys"
    appModuleName = "msys.client"
    appMainClass = "msys.client.App"
}

//
version = '0.0.1'
mainClassName = "${ext.appModuleName}/${ext.appMainClass}" // ${ext.appModuleName}/
def javaFXPlatform = getJavaFXPlatform()
def javaFXVersion = "16"

repositories {
    // Use JCenter for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    // json parser
    implementation 'com.google.code.gson:gson:2.8.7'

    // Network-Communication
    // HTTP-Communication
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    // websocket
    implementation "org.java-websocket:Java-WebSocket:1.5.2"

    // JavaFx
    implementation "org.openjfx:javafx-base:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-controls:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-graphics:${javaFXVersion}:${javaFXPlatform}"
    // jlink
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.2.0'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome-pack:12.2.0'

    // slf4j-error
    implementation "org.slf4j:slf4j-api:1.7.32"
    implementation "org.slf4j:slf4j-simple:1.7.32"

    // configuration files
    implementation 'org.apache.commons:commons-configuration2:2.7'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
}


application {
    mainModule.set(appModuleName)
    mainClass.set(appMainClass)
}

jlink {
    imageZip = project.file("${buildDir}/distributions/${appPackaging}-${javaFXPlatform}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = "${appLauncher}"
        jvmArgs = ['-Dlog4j.configurationFile=./log4j2.xml']
    }
}

javafx {
    modules = [ 'javafx.controls' ]
}

task dist {
    dependsOn clean, jlinkZip
    description "Calls clean and then jlinkZip [default]"
}

defaultTasks 'dist'

private static String getJavaFXPlatform() {
    def currentOS = DefaultNativePlatform.currentOperatingSystem
    if (currentOS.isWindows()) {
        return 'win'
    } else if (currentOS.isLinux()) {
        return 'linux'
    } else if (currentOS.isMacOsX()) {
        return 'mac'
    }
    return null
}

wrapper{
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion  = "7.0.2"
}

configurations {
    testCompile
}